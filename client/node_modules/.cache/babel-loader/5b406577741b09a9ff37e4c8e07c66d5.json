{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { listUsers, singleUser } from '../actions/userActions';\nconst usersReducer = createSlice({\n  name: 'users',\n  initialState: {\n    users: [],\n    errors: {},\n    loader: false,\n    user: {}\n  },\n  reducers: {\n    filteredUser: (state, action) => {\n      state.users = state.users.filter(user => user.name.toLowerCase().includes(action.payload));\n    }\n  },\n  extraReducers: {\n    [listUsers.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [listUsers.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.users = action.payload;\n    },\n    [listUsers.rejected]: (state, action) => {\n      state.loader = false;\n      state.errors = action.payload;\n    },\n    [singleUser.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [singleUser.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.user = action.payload;\n    },\n    [singleUser.rejected]: (state, action) => {\n      state.loader = false;\n      state.errors = action.payload;\n    }\n  }\n});\nexport const {\n  filteredUser\n} = usersReducer.actions;\nexport default usersReducer.reducer;","map":{"version":3,"sources":["/Volumes/LocalDisk/MERNJourney/ReduxToolKitProject/client/src/store/reducers/userReducer.js"],"names":["createSlice","listUsers","singleUser","usersReducer","name","initialState","users","errors","loader","user","reducers","filteredUser","state","action","filter","toLowerCase","includes","payload","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AACA,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVC,IAAAA,MAAM,EAAE,KAHE;AAIVC,IAAAA,IAAI,EAAE;AAJI,GAFe;AAQ7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE7BD,MAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYQ,MAAZ,CAAoBL,IAAD,IAAUA,IAAI,CAACL,IAAL,CAAUW,WAAV,GAAwBC,QAAxB,CAAiCH,MAAM,CAACI,OAAxC,CAA7B,CAAd;AAEH;AALK,GARmB;AAe7BC,EAAAA,aAAa,EAAE;AACX,KAACjB,SAAS,CAACkB,OAAX,GAAqB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACH,KAHU;AAIX,KAACP,SAAS,CAACmB,SAAX,GAAuB,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACI,OAArB;AACH,KAPU;AAQX,KAAChB,SAAS,CAACoB,QAAX,GAAsB,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACI,OAAtB;AACH,KAXU;AAYX,KAACf,UAAU,CAACiB,OAAZ,GAAsB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACH,KAdU;AAeX,KAACN,UAAU,CAACkB,SAAZ,GAAwB,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACI,OAApB;AACH,KAlBU;AAmBX,KAACf,UAAU,CAACmB,QAAZ,GAAuB,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACI,OAAtB;AACH;AAtBU;AAfc,CAAD,CAAhC;AAwCA,OAAO,MAAM;AAAEN,EAAAA;AAAF,IAAmBR,YAAY,CAACmB,OAAtC;AACP,eAAenB,YAAY,CAACoB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { listUsers, singleUser } from '../actions/userActions';\nconst usersReducer = createSlice({\n    name: 'users',\n    initialState: {\n        users: [],\n        errors: {},\n        loader: false,\n        user: {}\n    },\n    reducers: {\n        filteredUser: (state, action) => {\n\n            state.users = state.users.filter((user) => user.name.toLowerCase().includes(action.payload))\n\n        },\n    },\n    extraReducers: {\n        [listUsers.pending]: (state, action) => {\n            state.loader = true\n        },\n        [listUsers.fulfilled]: (state, action) => {\n            state.loader = false\n            state.users = action.payload\n        },\n        [listUsers.rejected]: (state, action) => {\n            state.loader = false\n            state.errors = action.payload\n        },\n        [singleUser.pending]: (state, action) => {\n            state.loader = true\n        },\n        [singleUser.fulfilled]: (state, action) => {\n            state.loader = false\n            state.user = action.payload\n        },\n        [singleUser.rejected]: (state, action) => {\n            state.loader = false\n            state.errors = action.payload\n        }\n    },\n})\nexport const { filteredUser } = usersReducer.actions;\nexport default usersReducer.reducer;"]},"metadata":{},"sourceType":"module"}