{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { singleUser } from \"../actions/userActions\";\nconst singleReducer = createSlice({\n  name: \"singleUser\",\n  initialState: {\n    errors: {},\n    loader: false,\n    user: {}\n  },\n  //   reducers: {\n  //     filteredUser: (state, action) => {\n  //       state.users = state.usersContainer.filter((user) => user.name.toLowerCase().includes(action.payload));\n  //     },\n  //   },\n  extraReducers: {\n    [singleUser.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [singleUser.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.user = action.payload;\n    },\n    [singleUser.rejected]: (state, action) => {\n      state.loader = false;\n      state.errors = action.payload;\n    }\n  }\n});\nexport default singleReducer.reducer;","map":{"version":3,"sources":["/Volumes/LocalDisk/MERNJourney/ReduxToolKitProject/client/src/store/reducers/singleReducer.js"],"names":["createSlice","singleUser","singleReducer","name","initialState","errors","loader","user","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,YAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,MAAM,EAAE,KAFI;AAGZC,IAAAA,IAAI,EAAE;AAHM,GAFkB;AAOhC;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE;AACb,KAACP,UAAU,CAACQ,OAAZ,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACD,KAHY;AAIb,KAACL,UAAU,CAACW,SAAZ,GAAwB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACE,OAApB;AACD,KAPY;AAQb,KAACZ,UAAU,CAACa,QAAZ,GAAuB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACE,OAAtB;AACD;AAXY;AAZiB,CAAD,CAAjC;AA2BA,eAAeX,aAAa,CAACa,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { singleUser } from \"../actions/userActions\";\n\nconst singleReducer = createSlice({\n  name: \"singleUser\",\n  initialState: {\n    errors: {},\n    loader: false,\n    user: {},\n  },\n  //   reducers: {\n  //     filteredUser: (state, action) => {\n  //       state.users = state.usersContainer.filter((user) => user.name.toLowerCase().includes(action.payload));\n  //     },\n  //   },\n  extraReducers: {\n    [singleUser.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [singleUser.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.user = action.payload;\n    },\n    [singleUser.rejected]: (state, action) => {\n      state.loader = false;\n      state.errors = action.payload;\n    },\n  },\n});\n\nexport default singleReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}